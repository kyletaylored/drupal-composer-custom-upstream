name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Build the assets.
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Run sniffing and validation.
    - name: Run PHP code sniffer
      run: composer run-script code-sniff


  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Git Commit and Push
      uses: github-actions-x/commit@v2.6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        push-branch: default
        commit-message: Deploy changes to default.
        force-add: false
        files: "*"
        name: Pantheon SE Bot
        email: se@pantheon.io
